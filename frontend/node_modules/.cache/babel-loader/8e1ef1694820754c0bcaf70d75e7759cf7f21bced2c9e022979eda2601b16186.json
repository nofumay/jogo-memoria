{"ast":null,"code":"import ThemeService from'./ThemeService';// Versão simulada do GameService para desenvolvimento\nclass GameService{constructor(){this.initLocalStorage();}// Retorna cartas para o jogo (com o tema padrão \"Emoji\")\nasync getCards(){try{// Usar o tema de emojis por padrão quando iniciado diretamente\nconst defaultThemeId=1;// ID do tema Emoji\nconst defaultDifficulty='medium';const cards=await ThemeService.getCardsForTheme(defaultThemeId,defaultDifficulty);return cards;}catch(error){console.error('Erro ao buscar cartas:',error);throw error;}}// Salva a pontuação no localStorage\nasync saveScore(moves){try{const scores=this.getScoresFromStorage();const username=this.getCurrentUsername();scores.push({id:Date.now(),username:username||'Jogador Anônimo',moves:moves,date:new Date().toISOString()});// Ordenar pontuações (menor número de movimentos = melhor)\nscores.sort((a,b)=>a.moves-b.moves);// Limitar a 10 melhores pontuações\nconst topScores=scores.slice(0,10);localStorage.setItem('memory_scores',JSON.stringify(topScores));return{success:true};}catch(error){console.error('Erro ao salvar pontuação:',error);throw error;}}// Retorna as pontuações mais altas\nasync getHighScores(){try{return this.getScoresFromStorage();}catch(error){console.error('Erro ao buscar pontuações:',error);throw error;}}// Funções auxiliares\ngetCurrentUsername(){try{const userStr=localStorage.getItem('currentUser');if(!userStr)return null;const user=JSON.parse(userStr);return user.username;}catch(error){return null;}}getScoresFromStorage(){const scoresStr=localStorage.getItem('memory_scores');return scoresStr?JSON.parse(scoresStr):[];}// Inicializar localStorage se necessário\ninitLocalStorage(){if(!localStorage.getItem('memory_scores')){localStorage.setItem('memory_scores',JSON.stringify([]));}}}export default new GameService();","map":{"version":3,"names":["ThemeService","GameService","constructor","initLocalStorage","getCards","defaultThemeId","defaultDifficulty","cards","getCardsForTheme","error","console","saveScore","moves","scores","getScoresFromStorage","username","getCurrentUsername","push","id","Date","now","date","toISOString","sort","a","b","topScores","slice","localStorage","setItem","JSON","stringify","success","getHighScores","userStr","getItem","user","parse","scoresStr"],"sources":["C:/Users/blessing/jogo-memoria/frontend/src/services/GameService.js"],"sourcesContent":["import ThemeService from './ThemeService';\r\n\r\n// Versão simulada do GameService para desenvolvimento\r\nclass GameService {\r\n  constructor() {\r\n    this.initLocalStorage();\r\n  }\r\n\r\n  // Retorna cartas para o jogo (com o tema padrão \"Emoji\")\r\n  async getCards() {\r\n    try {\r\n      // Usar o tema de emojis por padrão quando iniciado diretamente\r\n      const defaultThemeId = 1; // ID do tema Emoji\r\n      const defaultDifficulty = 'medium';\r\n      \r\n      const cards = await ThemeService.getCardsForTheme(defaultThemeId, defaultDifficulty);\r\n      return cards;\r\n    } catch (error) {\r\n      console.error('Erro ao buscar cartas:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // Salva a pontuação no localStorage\r\n  async saveScore(moves) {\r\n    try {\r\n      const scores = this.getScoresFromStorage();\r\n      const username = this.getCurrentUsername();\r\n      \r\n      scores.push({\r\n        id: Date.now(),\r\n        username: username || 'Jogador Anônimo',\r\n        moves: moves,\r\n        date: new Date().toISOString()\r\n      });\r\n      \r\n      // Ordenar pontuações (menor número de movimentos = melhor)\r\n      scores.sort((a, b) => a.moves - b.moves);\r\n      \r\n      // Limitar a 10 melhores pontuações\r\n      const topScores = scores.slice(0, 10);\r\n      \r\n      localStorage.setItem('memory_scores', JSON.stringify(topScores));\r\n      return { success: true };\r\n    } catch (error) {\r\n      console.error('Erro ao salvar pontuação:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // Retorna as pontuações mais altas\r\n  async getHighScores() {\r\n    try {\r\n      return this.getScoresFromStorage();\r\n    } catch (error) {\r\n      console.error('Erro ao buscar pontuações:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // Funções auxiliares\r\n  getCurrentUsername() {\r\n    try {\r\n      const userStr = localStorage.getItem('currentUser');\r\n      if (!userStr) return null;\r\n      \r\n      const user = JSON.parse(userStr);\r\n      return user.username;\r\n    } catch (error) {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  getScoresFromStorage() {\r\n    const scoresStr = localStorage.getItem('memory_scores');\r\n    return scoresStr ? JSON.parse(scoresStr) : [];\r\n  }\r\n\r\n  // Inicializar localStorage se necessário\r\n  initLocalStorage() {\r\n    if (!localStorage.getItem('memory_scores')) {\r\n      localStorage.setItem('memory_scores', JSON.stringify([]));\r\n    }\r\n  }\r\n}\r\n\r\nexport default new GameService(); "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}