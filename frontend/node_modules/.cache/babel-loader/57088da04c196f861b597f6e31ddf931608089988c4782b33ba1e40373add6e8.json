{"ast":null,"code":"import React,{useState,useEffect}from'react';import{useNavigate}from'react-router-dom';import{toast}from'react-toastify';import ThemeService from'../../services/ThemeService';import'./ThemeSelector.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const ThemeSelector=()=>{const[themes,setThemes]=useState([]);const[selectedTheme,setSelectedTheme]=useState(null);const[difficulty,setDifficulty]=useState('medium');const[loading,setLoading]=useState(true);const navigate=useNavigate();useEffect(()=>{const loadThemes=async()=>{try{setLoading(true);const data=await ThemeService.getAllThemes();setThemes(data);if(data.length>0){setSelectedTheme(data[0]);}setLoading(false);}catch(error){console.error('Erro ao carregar temas:',error);toast.error('Erro ao carregar temas. Tente novamente.');setLoading(false);}};loadThemes();},[]);const handleThemeSelect=theme=>{setSelectedTheme(theme);};const handleDifficultyChange=e=>{setDifficulty(e.target.value);};const startGame=()=>{if(selectedTheme){navigate(`/game/${selectedTheme.id}/${difficulty}`);}};const createMultiplayerGame=()=>{if(selectedTheme){// Gerar um ID de sala aleatório\nconst roomId=Math.random().toString(36).substring(2,9);navigate(`/multiplayer/${roomId}/${selectedTheme.id}/${difficulty}`);}};if(loading){return/*#__PURE__*/_jsx(\"div\",{className:\"loading\",children:\"Carregando temas...\"});}return/*#__PURE__*/_jsxs(\"div\",{className:\"theme-selector\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Selecione um Tema\"}),/*#__PURE__*/_jsx(\"div\",{className:\"themes-grid\",children:themes.map(theme=>/*#__PURE__*/_jsxs(\"div\",{className:`theme-card ${selectedTheme&&selectedTheme.id===theme.id?'selected':''}`,onClick:()=>handleThemeSelect(theme),children:[/*#__PURE__*/_jsx(\"h3\",{children:theme.name}),/*#__PURE__*/_jsx(\"div\",{className:\"theme-preview\",children:theme.symbols.slice(0,4).map((symbol,index)=>/*#__PURE__*/_jsx(\"div\",{className:\"symbol-preview\",children:symbol},index))})]},theme.id))}),/*#__PURE__*/_jsxs(\"div\",{className:\"game-options\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"difficulty-selector\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Dificuldade\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"radio-group\",children:[/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:\"difficulty\",value:\"easy\",checked:difficulty==='easy',onChange:handleDifficultyChange}),\"F\\xE1cil (8 cartas)\"]}),/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:\"difficulty\",value:\"medium\",checked:difficulty==='medium',onChange:handleDifficultyChange}),\"M\\xE9dio (16 cartas)\"]}),/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:\"difficulty\",value:\"hard\",checked:difficulty==='hard',onChange:handleDifficultyChange}),\"Dif\\xEDcil (24 cartas)\"]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"start-buttons\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:startGame,disabled:!selectedTheme,className:\"start-game-button\",children:\"Iniciar Jogo Solo\"}),/*#__PURE__*/_jsx(\"button\",{onClick:createMultiplayerGame,disabled:!selectedTheme,className:\"multiplayer-button\",children:\"Criar Jogo Multiplayer\"})]})]})]});};export default ThemeSelector;","map":{"version":3,"names":["React","useState","useEffect","useNavigate","toast","ThemeService","jsx","_jsx","jsxs","_jsxs","ThemeSelector","themes","setThemes","selectedTheme","setSelectedTheme","difficulty","setDifficulty","loading","setLoading","navigate","loadThemes","data","getAllThemes","length","error","console","handleThemeSelect","theme","handleDifficultyChange","e","target","value","startGame","id","createMultiplayerGame","roomId","Math","random","toString","substring","className","children","map","onClick","name","symbols","slice","symbol","index","type","checked","onChange","disabled"],"sources":["C:/Users/blessing/jogo-memoria/frontend/src/components/Themes/ThemeSelector.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { toast } from 'react-toastify';\r\nimport ThemeService from '../../services/ThemeService';\r\nimport './ThemeSelector.css';\r\n\r\nconst ThemeSelector = () => {\r\n  const [themes, setThemes] = useState([]);\r\n  const [selectedTheme, setSelectedTheme] = useState(null);\r\n  const [difficulty, setDifficulty] = useState('medium');\r\n  const [loading, setLoading] = useState(true);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const loadThemes = async () => {\r\n      try {\r\n        setLoading(true);\r\n        const data = await ThemeService.getAllThemes();\r\n        setThemes(data);\r\n        if (data.length > 0) {\r\n          setSelectedTheme(data[0]);\r\n        }\r\n        setLoading(false);\r\n      } catch (error) {\r\n        console.error('Erro ao carregar temas:', error);\r\n        toast.error('Erro ao carregar temas. Tente novamente.');\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    loadThemes();\r\n  }, []);\r\n\r\n  const handleThemeSelect = (theme) => {\r\n    setSelectedTheme(theme);\r\n  };\r\n\r\n  const handleDifficultyChange = (e) => {\r\n    setDifficulty(e.target.value);\r\n  };\r\n\r\n  const startGame = () => {\r\n    if (selectedTheme) {\r\n      navigate(`/game/${selectedTheme.id}/${difficulty}`);\r\n    }\r\n  };\r\n\r\n  const createMultiplayerGame = () => {\r\n    if (selectedTheme) {\r\n      // Gerar um ID de sala aleatório\r\n      const roomId = Math.random().toString(36).substring(2, 9);\r\n      navigate(`/multiplayer/${roomId}/${selectedTheme.id}/${difficulty}`);\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return <div className=\"loading\">Carregando temas...</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"theme-selector\">\r\n      <h2>Selecione um Tema</h2>\r\n      \r\n      <div className=\"themes-grid\">\r\n        {themes.map(theme => (\r\n          <div \r\n            key={theme.id}\r\n            className={`theme-card ${selectedTheme && selectedTheme.id === theme.id ? 'selected' : ''}`}\r\n            onClick={() => handleThemeSelect(theme)}\r\n          >\r\n            <h3>{theme.name}</h3>\r\n            <div className=\"theme-preview\">\r\n              {theme.symbols.slice(0, 4).map((symbol, index) => (\r\n                <div key={index} className=\"symbol-preview\">{symbol}</div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      <div className=\"game-options\">\r\n        <div className=\"difficulty-selector\">\r\n          <h3>Dificuldade</h3>\r\n          <div className=\"radio-group\">\r\n            <label>\r\n              <input\r\n                type=\"radio\"\r\n                name=\"difficulty\"\r\n                value=\"easy\"\r\n                checked={difficulty === 'easy'}\r\n                onChange={handleDifficultyChange}\r\n              />\r\n              Fácil (8 cartas)\r\n            </label>\r\n            \r\n            <label>\r\n              <input\r\n                type=\"radio\"\r\n                name=\"difficulty\"\r\n                value=\"medium\"\r\n                checked={difficulty === 'medium'}\r\n                onChange={handleDifficultyChange}\r\n              />\r\n              Médio (16 cartas)\r\n            </label>\r\n            \r\n            <label>\r\n              <input\r\n                type=\"radio\"\r\n                name=\"difficulty\"\r\n                value=\"hard\"\r\n                checked={difficulty === 'hard'}\r\n                onChange={handleDifficultyChange}\r\n              />\r\n              Difícil (24 cartas)\r\n            </label>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"start-buttons\">\r\n          <button \r\n            onClick={startGame}\r\n            disabled={!selectedTheme}\r\n            className=\"start-game-button\"\r\n          >\r\n            Iniciar Jogo Solo\r\n          </button>\r\n          \r\n          <button \r\n            onClick={createMultiplayerGame}\r\n            disabled={!selectedTheme}\r\n            className=\"multiplayer-button\"\r\n          >\r\n            Criar Jogo Multiplayer\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ThemeSelector; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}